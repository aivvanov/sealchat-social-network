{"version":3,"file":"static/js/46.5e7a7866.chunk.js","mappings":"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","sources":["webpack://react-app-1/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://react-app-1/./src/components/Dialogs/Dialog/Dialog.module.css?19be","components/Dialogs/Dialog/Dialog.jsx","webpack://react-app-1/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__oe96H\",\"dialog_items\":\"Dialogs_dialog_items__kMYK8\",\"separator\":\"Dialogs_separator__hYbl9\",\"messages\":\"Dialogs_messages__Cg2l+\",\"message_input\":\"Dialogs_message_input__MHRpL\",\"message_field\":\"Dialogs_message_field__uiXyb\",\"button_container\":\"Dialogs_button_container__Jk4t4\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"Dialog_dialog__5HDuH\",\"active_dialog\":\"Dialog_active_dialog__L4vim\",\"dialog_name\":\"Dialog_dialog_name__RuybO\"};","import React from \"react\";\nimport styles from \"./Dialog.module.css\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Dialog = ({ id, userName, userImage }) => {\n\n    const path = `/dialogs/${id}`;\n\n    return (\n        <div className={styles.dialog}>\n            <NavLink className={({ isActive }) => (isActive ? styles.active_dialog : styles.dialog_name)} to={path}>\n                <img src={userImage} alt=\"userImage\" />\n                {userName}\n            </NavLink>\n        </div>\n    );\n}\n\nexport default Dialog;\n","// extracted by mini-css-extract-plugin\nexport default {\"current_user_message\":\"Message_current_user_message__p8PC2\",\"user_message\":\"Message_user_message__glf+a\",\"message_content\":\"Message_message_content__VQ3rA\"};","import React from \"react\";\nimport styles from \"./Message.module.css\";\n\nconst Message = ({ messageCreatedAt, messageUserInfo, messageText }) => {\n\n  const date = new Date(messageCreatedAt);\n  const formattedDate = isNaN(date.getTime()) ? 'Invalid Date' : date.toLocaleString();\n\n  return (\n    <div>\n      <div className={messageUserInfo.isCurrentUser ? styles.current_user_message : styles.user_message}>\n        {messageUserInfo.isCurrentUser ? \"\" : <img src={messageUserInfo.icon} alt=\"userImage\" />}\n        <div className={styles.message_content}>\n          <p>{messageText}</p>\n          <span>{formattedDate}</span>\n        </div>\n        {messageUserInfo.isCurrentUser ? <img src={messageUserInfo.icon} alt=\"userImage\" /> : \"\"}\n      </div>\n    </div>\n  );\n};\n\n\nexport default Message;\n","import React from \"react\";\nimport styles from \"./Dialogs.module.css\";\nimport Dialog from \"./Dialog/Dialog\";\nimport Message from \"./Message/Message\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { Textarea } from \"../common/FormsControls/FormsControls\";\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\n\nconst Dialogs = ({ dialogs, messages, sendMessage }) => {\n    const dialogElements = dialogs\n        .map(dialog => <Dialog id={dialog.id} userName={dialog.name} userImage={dialog.icon} key={dialog.id} />);\n\n    const messageElements = messages\n        .map(message => <Message messageText={message.text} messageCreatedAt={message.createdAt} messageUserInfo={message.user} key={message.id} />);\n\n    const addNewMessage = (value) => {\n        sendMessage(value.newMessageBody)\n    }\n\n    return (\n        <div className={styles.dialogs}>\n            <div className={styles.dialog_items}>\n                {dialogElements}\n            </div>\n            <div className={styles.separator}></div>\n            <div className={styles.messages}>\n                {messageElements}\n            </div>\n            <MessageFormRedux onSubmit={addNewMessage} />\n        </div>\n    )\n}\n\nconst MessageForm = ({ handleSubmit }) => {\n    return (\n        <form onSubmit={handleSubmit} className={styles.message_field}>\n            <Field\n                component={Textarea}\n                name=\"newMessageBody\"\n                placeholder=\"Text message...\"\n                className={styles.message_input}\n                validate={[required, maxLengthCreator(50)]}\n            />\n            <div className={styles.button_container}>\n                <button type=\"submit\">Send</button>\n            </div>\n        </form>\n    );\n};\n\nconst MessageFormRedux = reduxForm({\n    form: \"dialogMessageForm\"\n})(MessageForm);\n\nexport default Dialogs;","import React from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToPropsForRedirect = (state) => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\n\nexport const withAuthRedirect = (Component) => {\n\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Navigate to='/login' />\n            \n            return <Component { ...this.props} />\n        }\n    }\n\n    const ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n    return ConnectedRedirectComponent;\n}","import { sendMessage } from \"../../redux/dialogs-reducer\";\nimport { connect } from \"react-redux\";\nimport Dialogs from \"./Dialogs\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\n\nconst mapStateToProps = (state) => {\n    return {\n        messages: state.dialogsPage.messages,\n        dialogs: state.dialogsPage.dialogs,\n        newMessageText: state.dialogsPage.newMessageText\n    };\n}\n\nexport default compose(\n    connect(mapStateToProps, { sendMessage }),\n    withAuthRedirect\n)(Dialogs);"],"names":["_ref","id","userName","userImage","path","_jsx","className","styles","children","_jsxs","NavLink","_ref2","isActive","to","src","alt","messageCreatedAt","messageUserInfo","messageText","date","Date","formattedDate","isNaN","getTime","toLocaleString","isCurrentUser","icon","MessageFormRedux","reduxForm","form","handleSubmit","onSubmit","Field","component","Textarea","name","placeholder","validate","required","maxLengthCreator","type","dialogs","messages","sendMessage","dialogElements","map","dialog","Dialog","messageElements","message","Message","text","createdAt","user","value","newMessageBody","mapStateToPropsForRedirect","state","isAuth","auth","compose","connect","dialogsPage","newMessageText","Component","RedirectComponent","React","render","this","props","Navigate","Dialogs"],"sourceRoot":""}